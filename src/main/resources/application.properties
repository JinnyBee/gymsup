#서버
server.port=8080

#데이터베이스
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://gymsup.cmtu5chbehej.ap-northeast-2.rds.amazonaws.com:3306/gymsup
spring.datasource.username=gymsup
spring.datasource.password=gymsup1234!
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://woori-prn.iptime.org:3306/gymsup
#spring.datasource.username=gymsup
#spring.datasource.password=12345678

#JPA
spring.jpa.database-platform=org.hibernate.dialect.MariaDB103Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

#타임리프
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8

#파일업로드
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-request-size=30MB
spring.servlet.multipart.max-file-size=10MB
#spring.servlet.multipart.location=

#플라스크 서버
#flask.Server.Url = http://127.0.0.1:5000/detect
flask.Server.Url = http://43.200.3.184:5000/detect

#food 영양정보 데이터베이스 서버
fooddb.Server.Url = http://openapi.foodsafetykorea.go.kr/api/be61650aef44488a9029/I2790/json/1/3/

#사용자 환경변수
#imgUploadLocation=C:/gymsup/
imgUploadLocation=static

tempFolder = C://gymsup/temp/
uploadPath=file:///C:/gymsup/

#AWS S3를 이용한 파일업로드
cloud.aws.credentials.accessKey = AKIA55BSDPGKZV4FQTTH
cloud.aws.credentials.secretKey = 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
cloud.aws.s3.bucket = gymsup
cloud.aws.region.static = ap-northeast-2
cloud.aws.stack.auto = false

spring.mail.host = smtp.gmail.com
spring.mail.port = 587
spring.mail.username = alsh9947@gmail.com
spring.mail.password = hmql bkbz remx bnad
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.starttls.enable = true

#OAuth2 Setting
spring.profiles.include=oauth

#google
spring.security.oauth2.client.registration.google.client-id=534027845874-vjqk0oc4i6og0roebl29nbqvgjb67rjt.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email

#kakao
spring.security.oauth2.client.registration.kakao.client-id=9247bf0d91fb294a8b14e6cf7019ba75
spring.security.oauth2.client.registration.kakao.client-secret=fYZ61Xx8FLYNGvNCkRFy5EcMgeh1bTRO
spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost:8080/login/oauth2/code/kakao

#Kakao
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST
spring.security.oauth2.client.registration.kakao.scope=account_email

#naver
spring.security.oauth2.client.registration.naver.client-id=_1cLn02P0od9jucECuKC
spring.security.oauth2.client.registration.naver.client-secret=SAhtdJuvUa
spring.security.oauth2.client.registration.naver.scope= email
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response